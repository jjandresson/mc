# Lua syntax highlighting

context default

# keywords
    keyword whole nil		constant.language.null.lua
    keyword whole false		constant.language.boolean.lua
    keyword whole true		constant.language.boolean.lua

    keyword whole break		keyword.control.break.lua
    keyword whole do		keyword.control.loop.lua
    keyword whole else		keyword.control.if.lua
    keyword whole elseif	keyword.control.if.lua
    keyword whole end		keyword.control.end.lua
    keyword whole for		keyword.control.loop.lua
    keyword whole function	keyword.control.function.lua
    keyword whole if		keyword.control.if.lua
    keyword whole in		keyword.control.lua
    keyword whole repeat	keyword.control.loop.lua
    keyword whole return	keyword.control.lua
    keyword whole then		keyword.control.if.lua
    keyword whole until		keyword.control.loop.lua
    keyword whole while		keyword.control.looplua

    keyword whole local		storage.modifier.local.lua

    keyword whole and		keyword.operator.logical.lua
    keyword whole or		keyword.operator.logical.lua
    keyword whole not		keyword.operator.logical.lua

    keyword whole self		variable.language.self

# Operators
    keyword (	punctuation.paren.open.lua
    keyword )	punctuation.paren.close.lua
    keyword ,	punctuation.separator.comma.lua
    keyword ;	punctuation.separator.semicolon.lua

    keyword ...	storage.type.tuple.lua

    keyword ..	keyword.operator.concat.lua
    keyword .	keyword.operator.lookup.period.lua
    keyword :	keyword.operator.lookup.colon.lua
    keyword {	keyword.operator.constructor.table.lua
    keyword }	keyword.operator.constructor.table.lua
    keyword [	keyword.operator.lookup.bracket.open.lua
    keyword ]	keyword.operator.lookup.bracket.close.lua

    keyword >>	keyword.operator.comparison.lua
    keyword <<	keyword.operator.comparison.lua
    keyword \+	keyword.operator.arithmetic.lua
    keyword -	keyword.operator.arithmetic.lua
    keyword \*	keyword.operator.arithmetic.lua
    keyword /	keyword.operator.arithmetic.lua
    keyword ^	keyword.operator.arithmetic.lua
    keyword %	keyword.operator.arithmetic.lua

    keyword ==	keyword.operator.comparison.lua
    keyword ~=	keyword.operator.comparison.lua
    keyword <=	keyword.operator.comparison.lua
    keyword =>	keyword.operator.comparison.lua
    keyword >	keyword.operator.comparison.lua
    keyword <	keyword.operator.comparison.lua

    keyword =	keyword.operator.assignment.lua


# midnight-commander globals
    keyword whole T			support.function.library.lua.midnight-commander
    keyword whole Q			support.function.library.lua.midnight-commander
    keyword whole N			support.function.library.lua.midnight-commander
    keyword whole E			support.function.library.lua.midnight-commander
    keyword whole abort			support.function.library.lua.midnight-commander
    keyword whole abortive		support.function.library.lua.midnight-commander
    keyword whole assert_arg_type	support.function.library.lua.midnight-commander
    keyword whole import_from		support.function.library.lua.midnight-commander
    keyword whole require_legacy	support.function.library.lua.midnight-commander
    keyword whole declare		support.function.library.lua.midnight-commander
    keyword whole alert			support.function.library.lua.midnight-commander
    keyword whole argv			variable.library.lua.midnight-commander

# Lua Core functions
    keyword whole dofile		support.function.import.lua
    keyword whole load			support.function.import.lua
    keyword whole loadfile		support.function.import.lua
    keyword whole require		support.function.import.lua

    keyword whole assert		support.function.builtin.lua
    keyword whole collectgarbage	support.function.builtin.lua
    keyword whole error			support.function.builtin.lua
    keyword whole getmetatable		support.function.builtin.lua
    keyword whole ipairs		support.function.builtin.lua
    keyword whole next			support.function.builtin.lua
    keyword whole pairs			support.function.builtin.lua
    keyword whole pcall			support.function.builtin.lua
    keyword whole print			support.function.builtin.lua
    keyword whole rawequal		support.function.builtin.lua
    keyword whole rawlen		support.function.builtin.lua
    keyword whole rawget		support.function.builtin.lua
    keyword whole rawset		support.function.builtin.lua
    keyword whole select		support.function.builtin.lua
    keyword whole setmetatable		support.function.builtin.lua
    keyword whole tonumber		support.function.builtin.lua
    keyword whole tostring		support.function.builtin.lua
    keyword whole type			support.function.builtin.lua
    keyword whole xpcall		support.function.builtin.lua

    keyword whole getfenv		invalid.deprecated.support.function.lua
    keyword whole loadstring		invalid.deprecated.support.function.lua
    keyword whole setfenv		invalid.deprecated.support.function.lua
    keyword whole unpack		invalid.deprecated.support.function.lua

    keyword whole bit32.arshift		invalid.deprecated.support.function.library.lua
    keyword whole bit32.band		invalid.deprecated.support.function.library.lua
    keyword whole bit32.bnot		invalid.deprecated.support.function.library.lua
    keyword whole bit32.bor		invalid.deprecated.support.function.library.lua
    keyword whole bit32.btest		invalid.deprecated.support.function.library.lua
    keyword whole bit32.bxor		invalid.deprecated.support.function.library.lua
    keyword whole bit32.extract		invalid.deprecated.support.function.library.lua
    keyword whole bit32.lrotate		invalid.deprecated.support.function.library.lua
    keyword whole bit32.lshift		invalid.deprecated.support.function.library.lua
    keyword whole bit32.replace		invalid.deprecated.support.function.library.lua
    keyword whole bit32.rrotate		invalid.deprecated.support.function.library.lua
    keyword whole bit32.rshift		invalid.deprecated.support.function.library.lua

    keyword whole coroutine.create	support.function.library.lua
    keyword whole coroutine.isyieldable	support.function.library.lua
    keyword whole coroutine.resume	support.function.library.lua
    keyword whole coroutine.running	support.function.library.lua
    keyword whole coroutine.status	support.function.library.lua
    keyword whole coroutine.wrap	support.function.library.lua
    keyword whole coroutine.yield	support.function.library.lua

    keyword whole debug.debug		support.function.library.lua
    keyword whole debug.getfenv		invalid.deprecated.support.function.library.lua
    keyword whole debug.gethook		support.function.library.lua
    keyword whole debug.getinfo		support.function.library.lua
    keyword whole debug.getlocal	support.function.library.lua
    keyword whole debug.getmetatable	support.function.library.lua
    keyword whole debug.getregistry	support.function.library.lua
    keyword whole debug.getupvalue	support.function.library.lua
    keyword whole debug.getuservalue	support.function.library.lua
    keyword whole debug.setfenv		invalid.deprecated.support.function.library.lua
    keyword whole debug.sethook		support.function.library.lua
    keyword whole debug.setlocal	support.function.library.lua
    keyword whole debug.setmetatable	support.function.library.lua
    keyword whole debug.setupvalue	support.function.library.lua
    keyword whole debug.setuservalue	support.function.library.lua
    keyword whole debug.traceback	support.function.library.lua
    keyword whole debug.upvalueid	support.function.library.lua
    keyword whole debug.upvaluejoin	support.function.library.lua

    keyword whole io.close		support.function.library.lua
    keyword whole io.flush		support.function.library.lua
    keyword whole io.input		support.function.library.lua
    keyword whole io.lines		support.function.library.lua
    keyword whole io.open		support.function.library.lua
    keyword whole io.output		support.function.library.lua
    keyword whole io.popen		support.function.library.lua
    keyword whole io.read		support.function.library.lua
    keyword whole io.stderr		constant.library.lua
    keyword whole io.stdin		constant.library.lua
    keyword whole io.stdout		constant.library.lua
    keyword whole io.tmpfile		support.function.library.lua
    keyword whole io.type		support.function.library.lua
    keyword whole io.write		support.function.library.lua

    keyword whole math.abs		support.function.library.lua
    keyword whole math.acos		support.function.library.lua
    keyword whole math.asin		support.function.library.lua
    keyword whole math.atan		support.function.library.lua
    keyword whole math.atan2		invalid.deprecated.support.function.library.lua
    keyword whole math.ceil		support.function.library.lua
    keyword whole math.cos		support.function.library.lua
    keyword whole math.deg		support.function.library.lua
    keyword whole math.exp		support.function.library.lua
    keyword whole math.floor		support.function.library.lua
    keyword whole math.fmod		support.function.library.lua
    keyword whole math.frexp		invalid.deprecated.support.function.library.lua
    keyword whole math.huge		support.constant.language.lua
    keyword whole math.ldexp		invalid.deprecated.support.function.library.lua
    keyword whole math.log		support.function.library.lua
    keyword whole math.log10		invalid.deprecated.support.function.library.lua
    keyword whole math.max		support.function.library.lua
    keyword whole math.maxinteger	support.function.library.lua
    keyword whole math.min		support.function.library.lua
    keyword whole math.mininteger	support.function.library.lua
    keyword whole math.modf		support.function.library.lua
    keyword whole math.pi		constant.library.lua
    keyword whole math.pow		invalid.deprecated.support.function.library.lua
    keyword whole math.rad		support.function.library.lua
    keyword whole math.random		support.function.library.lua
    keyword whole math.randomseed	support.function.library.lua
    keyword whole math.sin		support.function.library.lua
    keyword whole math.sqrt		support.function.library.lua
    keyword whole math.tan		support.function.library.lua
    keyword whole math.tointeger	support.function.library.lua
    keyword whole math.type		support.function.library.lua
    keyword whole math.ult		support.function.library.lua

    keyword whole os.clock		support.function.library.lua
    keyword whole os.date		support.function.library.lua
    keyword whole os.difftime		support.function.library.lua
    keyword whole os.execute		support.function.library.lua
    keyword whole os.exit		support.function.library.lua
    keyword whole os.getenv		support.function.library.lua
    keyword whole os.remove		support.function.library.lua
    keyword whole os.rename		support.function.library.lua
    keyword whole os.setlocale		support.function.library.lua
    keyword whole os.time		support.function.library.lua
    keyword whole os.tmpname		support.function.library.lua

    keyword whole package.config	constant.library.lua
    keyword whole package.cpath		variable.library.lua
    keyword whole package.loaded	variable.library.lua
    keyword whole package.loadlib	support.function.library.lua
    keyword whole package.path		variable.library.lua
    keyword whole package.preload	variable.library.lua
    keyword whole package.searchers	variable.library.lua
    keyword whole package.searchpath	support.function.library.lua

    keyword whole string.byte		support.function.library.lua
    keyword whole string.char		support.function.library.lua
    keyword whole string.dump		support.function.library.lua
    keyword whole string.find		support.function.library.lua
    keyword whole string.format		support.function.library.lua
    keyword whole string.gfind		invalid.deprecated.support.function.library.lua
    keyword whole string.gmatch		support.function.library.lua
    keyword whole string.gsub		support.function.library.lua
    keyword whole string.len		support.function.library.lua
    keyword whole string.lower		support.function.library.lua
    keyword whole string.match		support.function.library.lua
    keyword whole string.pack		support.function.library.lua
    keyword whole string.packsize	support.function.library.lua
    keyword whole string.rep		support.function.library.lua
    keyword whole string.reverse	support.function.library.lua
    keyword whole string.sub		support.function.library.lua
    keyword whole string.unpack		support.function.library.lua
    keyword whole string.upper		support.function.library.lua

    keyword whole table.concat		support.function.library.lua
    keyword whole table.foreach		invalid.deprecated.support.function.library.lua
    keyword whole table.foreachi	invalid.deprecated.support.function.library.lua
    keyword whole table.getn		invalid.deprecated.support.function.library.lua
    keyword whole table.insert		support.function.library.lua
    keyword whole table.move		support.function.library.lua
    keyword whole table.pack		support.function.library.lua
    keyword whole table.remove		support.function.library.lua
    keyword whole table.setn		invalid.deprecated.support.function.library.lua
    keyword whole table.sort		support.function.library.lua
    keyword whole table.unpack		support.function.library.lua

    keyword whole utf8.char		support.function.library.lua
    keyword whole utf8.charpattern	variable.library..lua
    keyword whole utf8.codepoint	support.function.library.lua
    keyword whole utf8.codes		support.function.library.lua
    keyword whole utf8.len		support.function.library.lua
    keyword whole utf8.offset		support.function.library.lua

# metamethods
    keyword whole __add__	meta.method.lua
    keyword whole __sub__	meta.method.lua
    keyword whole __mul__	meta.method.lua
    keyword whole __div__	meta.method.lua
    keyword whole __mod__	meta.method.lua
    keyword whole __pow__	meta.method.lua
    keyword whole __unm__	meta.method.lua
    keyword whole __idiv__	meta.method.lua
    keyword whole __band__	meta.method.lua
    keyword whole __bor__	meta.method.lua
    keyword whole __xor__	meta.method.lua
    keyword whole __bnot__	meta.method.lua
    keyword whole __shl__	meta.method.lua
    keyword whole __shr__	meta.method.lua
    keyword whole __add__	meta.method.lua
    keyword whole __concat__	meta.method.lua
    keyword whole __len__	meta.method.lua
    keyword whole __eq__	meta.method.lua
    keyword whole __lt__	meta.method.lua
    keyword whole __le__	meta.method.lua
    keyword whole __index__	meta.method.lua
    keyword whole __newindex__	meta.method.lua
    keyword whole __call__	meta.method.lua

# file and string methods
    wholechars abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890_.:

    keyword whole \[*\]:close		support.function.library.lua
    keyword whole \[*\]:flush		support.function.library.lua
    keyword whole \[*\]:lines		support.function.library.lua
    keyword whole \[*\]:read		support.function.library.lua
    keyword whole \[*\]:seek		support.function.library.lua
    keyword whole \[*\]:write		support.function.library.lua

    keyword whole \[*\]:byte		support.function.library.lua
    keyword whole \[*\]:find		support.function.library.lua
    keyword whole \[*\]:format\[\]	support.function.library.lua
    keyword whole \[*\]:gfind		invalid.deprecated.support.function.library.lua
    keyword whole \[*\]:gmatch		support.function.library.lua
    keyword whole \[*\]:gsub		support.function.library.lua
    keyword whole \[*\]:len		support.function.library.lua
    keyword whole \[*\]:lower		support.function.library.lua
    keyword whole \[*\]:match		support.function.library.lua
    keyword whole \[*\]:pack		support.function.library.lua
    keyword whole \[*\]:packsize	support.function.library.lua
    keyword whole \[*\]:rep		support.function.library.lua
    keyword whole \[*\]:reverse		support.function.library.lua
    keyword whole \[*\]:sub		support.function.library.lua
    keyword whole \[*\]:unpack		support.function.library.lua
    keyword whole \[*\]:upper		support.function.library.lua


# Global Variables
    keyword whole _VERSION constant.language.lua
    keyword whole _G constant.language.lua

#
# Long comments
#

context exclusive --[[ ]] comment
    # highlights ldoc tags: "@todo", "@param", "@function" etc.
    keyword @\[abcdefghijklmnopqrstuvwxyz\] entity.name.tag.lua
    spellcheck
context exclusive --[=[ ]=] comment
    keyword @\[abcdefghijklmnopqrstuvwxyz\] entity.name.tag.lua
    spellcheck
context exclusive --[==[ ]==] comment
    keyword @\[abcdefghijklmnopqrstuvwxyz\] entity.name.tag.lua
    spellcheck
context exclusive --[===[ ]===] comment
    keyword @\[abcdefghijklmnopqrstuvwxyz\] entity.name.tag.lua
    spellcheck
# 4 equals and up (the number of ='s doesn't have to match, but that's the best we can do):
context exclusive --[====\[=\][ ]====\[=\]] comment
    keyword @\[abcdefghijklmnopqrstuvwxyz\] entity.name.tag.lua
    spellcheck

#
# Long strings
#

context exclusive [[ ]] string.quoted.multiline.other.lua
    spellcheck
context exclusive [=[ ]=] string.quoted.multiline.other.lua
    spellcheck
context exclusive [==[ ]==] string.quoted.multiline.other.lua
    spellcheck
context exclusive [===[ ]===] string.quoted.multiline.other.lua
    spellcheck
# 4 equals and up (the number of ='s doesn't have to match, but that's the best we can do):
context exclusive [====\[=\][ ]====\[=\]] string.quoted.multiline.other.lua
    spellcheck


# Simple comments
context exclusive -- \n comment.line.double-dash.lua
    keyword @\[abcdefghijklmnopqrstuvwxyz\] comment.tag.line.double-dash.lua
    spellcheck

# Shebang line
context linestart #! \n comment.line.file-magic.lua

# Strings
context " " string.quoted.double.lua
    keyword %a constant.other.placeholder.lua
    keyword %c constant.other.placeholder.lua
    keyword %d constant.other.placeholder.lua
    keyword %l constant.other.placeholder.lua
    keyword %p constant.other.placeholder.lua
    keyword %q constant.other.placeholder.lua
    keyword %s constant.other.placeholder.lua
    keyword %u constant.other.placeholder.lua
    keyword %w constant.other.placeholder.lua
    keyword %x constant.other.placeholder.lua
    keyword %z constant.other.placeholder.lua
    keyword \\\\ constant.character.escape.backslash.lua
    keyword \\" constant.character.escape.double-quote.lua
    keyword \\\{abtnvfr\} constant.character.escape.special.lua
    keyword \\\{0123\}\{01234567\}\{01234567\} constant.character.escape.byte.lua
    keyword \\\{01234567\}\{01234567\} constant.character.escape.octal.lua
    keyword \\\{01234567\} constant.character.escape.octal.lua
    spellcheck

context ' ' string.quoted.single.lua
    keyword %a constant.other.placeholder.lua
    keyword %c constant.other.placeholder.lua
    keyword %d constant.other.placeholder.lua
    keyword %l constant.other.placeholder.lua
    keyword %p constant.other.placeholder.lua
    keyword %q constant.other.placeholder.lua
    keyword %s constant.other.placeholder.lua
    keyword %u constant.other.placeholder.lua
    keyword %w constant.other.placeholder.lua
    keyword %x constant.other.placeholder.lua
    keyword %z constant.other.placeholder.lua
    keyword \\\\ constant.character.escape.lua
    keyword \\' constant.character.escape.lua
    keyword \\\{abtnvfr\} constant.character.escape.special.lua
    keyword \\\{0123\}\{01234567\}\{01234567\} constant.character.escape.byte.lua
    keyword \\\{01234567\}\{01234567\} constant.character.escape.octal.lua
    keyword \\\{01234567\} constant.character.escape.octallua
    spellcheck
