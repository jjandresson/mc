# Syntax rules for the C and the C++ programming languages

context default
    keyword whole auto type
    keyword whole break control
    keyword whole case control
    keyword whole char type
    keyword whole const modifier
    keyword whole continue control
    keyword whole do control
    keyword whole double type
    keyword whole else control
    keyword whole enum type
    keyword whole extern modifier
    keyword whole float type
    keyword whole for control
    keyword whole goto control
    keyword whole if control
    keyword whole int type
    keyword whole long type
    keyword whole register modifier
    keyword whole return control
    keyword whole short type
    keyword whole signed type
    keyword whole sizeof modifier
    keyword whole static modifier
    keyword whole struct type
    keyword whole switch control
    keyword whole typedef type
    keyword whole union type
    keyword whole unsigned type
    keyword whole void type
    keyword whole volatile modifier
    keyword whole while control
    keyword whole asm type
    keyword whole inline modifier
    keyword whole wchar_t type
    keyword whole ... type
    keyword whole linestart \{\s\t\}\[\s\t\]#*\n preprocessor
    keyword whole \[\s\t\]default control
    keyword whole linestart \[\s\t\]\{ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\}\[0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\]: label

    keyword /\* comment
    keyword \*/ comment
    keyword // comment

    keyword '\\\{"abtnvfr\}' escape
    keyword '\\\{0123\}\{01234567\}\{01234567\}' escape
    keyword '\\'' escape
    keyword '\\\\' escape
    keyword '\\0' escape
    keyword '\{\s!"#$%&()\*\+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\}' string

# punctuation characters, sorted by ASCII code
    keyword ! operator
    keyword % operator
    keyword && operator
    keyword & operator
    keyword ( operator
    keyword ) operator
    keyword \* operator
    keyword \+ operator
    keyword , operator
    keyword - operator
    keyword / operator
    keyword : operator
    keyword ; punctuation
    keyword < operator
    keyword = operator
    keyword > operator
    keyword ? operator
    keyword [ operator
    keyword ] operator
    keyword ^ operator
    keyword { operator
    keyword || operator
    keyword | operator
    keyword } operator
    keyword ~ operator

context exclusive /\* \*/ comment
    spellcheck

context exclusive // \n comment
    spellcheck

context linestart # \n preprocessor
    keyword \\\n escape
    keyword /\**\*/ comment
    keyword //*\n comment
    keyword "+" string
    keyword <+> string

context " " string
    spellcheck
    keyword \\" escape
    keyword %% escape
    keyword %\[#0\s-\+,\]\[0123456789\*\]\[.\]\[0123456789\*\]\[L\]\{eEfgGoxX\} format
    keyword %\[0\s-\+,\]\[0123456789\*\]\[.\]\[0123456789\*\]\[hl\]\{diuxX\} format
    keyword %\[hl\]n format
    keyword %\[-\]\[0123456789\*\]\[.\]\[0123456789\*\]s format
    keyword %[*] format
    keyword %c format
    keyword %p format
    keyword \\\{0123\}\{01234567\}\{01234567\} escape
    keyword \\\\ escape
    keyword \\' escape
    keyword \\\{abtnvfr\} escape
